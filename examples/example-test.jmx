<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.novomatic.jmeter.kafka.config.KafkaProducerConfig guiclass="com.novomatic.jmeter.kafka.config.gui.KafkaProducerConfigGui" testclass="com.novomatic.jmeter.kafka.config.KafkaProducerConfig" testname="Kafka Producer Config" enabled="true">
          <elementProp name="kafka.producer.properties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="bootstrap.servers" elementType="Argument">
                <stringProp name="Argument.name">bootstrap.servers</stringProp>
                <stringProp name="Argument.value">localhost:9092</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="key.serializer" elementType="Argument">
                <stringProp name="Argument.name">key.serializer</stringProp>
                <stringProp name="Argument.value">org.apache.kafka.common.serialization.StringSerializer</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="value.serializer" elementType="Argument">
                <stringProp name="Argument.name">value.serializer</stringProp>
                <stringProp name="Argument.value">org.apache.kafka.common.serialization.StringSerializer</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="kafka.producer.topic">test</stringProp>
        </com.novomatic.jmeter.kafka.config.KafkaProducerConfig>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Sample #1" enabled="true"/>
        <hashTree>
          <ConfigTestElement guiclass="com.novomatic.jmeter.kafka.config.gui.KafkaMessageGui" testclass="ConfigTestElement" testname="Kafka Message" enabled="true">
            <stringProp name="kafka.producer.message">{
	&quot;timestamp&quot;: &quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ssX)}&quot;,
	&quot;userId&quot;: &quot;${__threadNum}&quot;,
	&quot;message&quot;: &quot;Hello kafka meter!&quot;
}</stringProp>
            <stringProp name="kafka.producer.key">test-key</stringProp>
          </ConfigTestElement>
          <hashTree/>
          <com.novomatic.jmeter.kafka.sampler.KafkaSampler guiclass="com.novomatic.jmeter.kafka.control.gui.KafkaSamplerGui" testclass="com.novomatic.jmeter.kafka.sampler.KafkaSampler" testname="Kafka Producer" enabled="true">
            <elementProp name="kafka.producer.properties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.novomatic.jmeter.kafka.sampler.KafkaSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Sample #2" enabled="true"/>
        <hashTree>
          <ConfigTestElement guiclass="com.novomatic.jmeter.kafka.config.gui.KafkaMessageGui" testclass="ConfigTestElement" testname="Kafka Message" enabled="true">
            <stringProp name="kafka.producer.key">test-key2</stringProp>
            <stringProp name="kafka.producer.message">{
	&quot;timestamp&quot;: &quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ssX)}&quot;,
	&quot;userId&quot;: &quot;${__threadNum}&quot;,
	&quot;message&quot;: &quot;Hello again!&quot;
}</stringProp>
          </ConfigTestElement>
          <hashTree/>
          <com.novomatic.jmeter.kafka.sampler.KafkaSampler guiclass="com.novomatic.jmeter.kafka.control.gui.KafkaSamplerGui" testclass="com.novomatic.jmeter.kafka.sampler.KafkaSampler" testname="Kafka Producer" enabled="true">
            <elementProp name="kafka.producer.properties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.novomatic.jmeter.kafka.sampler.KafkaSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
